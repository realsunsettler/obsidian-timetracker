#!/usr/bin/python3


from datetime import datetime
import subprocess
import os

OBSIDIAN_JOURNAL_DIR = os.environ["HOME"] + "/obsidian_main/daily"
TRACKER_TAG = "#gw"

today = datetime.now().strftime("%Y-%m-%d")
def h_to_float(h: str) -> float:
  p = h.split(":")
  if len(p) == 1: return int(h)
  return int(p[0]) + float(int(p[1]))/60.0

gws = subprocess.check_output(["grep", "-r", TRACKER_TAG, OBSIDIAN_JOURNAL_DIR]).decode("utf-8").split("\n")
gws = [l.strip().split(TRACKER_TAG) for l in gws if l != ""]
gws = [(l[0].split("/")[-1][:-3],*l[1].strip().split("-")) for l in gws]
gws = [gw if len(gw) == 2 or len(gw[2]) > 0 else (gw[0],gw[1]) for gw in gws]
month_hours = {}
today_hours = 0
for gw in gws:
  # gw is tuple (day, starthour, endhour)
  m = gw[0][:7]
  if len(gw) == 2:
    print(f"Unfinished hours on {gw[0]} (start {gw[1]})")
    continue
  h = h_to_float(gw[2]) - h_to_float(gw[1])
  if gw[0] == today: today_hours += h
  # print(f"{gw[0]}: {h}")
  month_hours[m] = month_hours.get(m,0) + h
print(month_hours)
print(f"today: {today_hours}")
# rn gives list of tuples (day, hourstart, hourend)
# hourstart/end can be single number, or 10:30 for ex.
# not 0 padded. 6 is 6am, 18 is 6p
